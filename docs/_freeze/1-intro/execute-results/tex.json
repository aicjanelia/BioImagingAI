{
  "hash": "9713e2ec4bc642f85fd8ed6dec4ff0c6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nauthor: \n  - name: Teng-Leong Chew\n    orcid: 0000-0002-3139-7560\n    affiliations:\n      - name: HHMI Janelia Research Campus\n        state: VA\n        country: USA\n        postal-code: 20147\nsubtitle: AI at Every Stage of the Microscopy Workflow\n---\n\n\n\n\n\n\n# Introduction\n<!--Your first header will be the chapter's upper-level table of contents title.-->\n<!--If you'd like to have a subtitle, include it in the Quarto header above -->\n\nUnder your first header, include a brief introduction to your chapter.\n\nStarting prompt for this chapter: Chapter 1 outlines how AI can span experimental design, image acquisition, image processing, and analysis (without discussing what AI is from a technical perspective). This chapter will also outline the roadmap of the book which will largely focus on acquisition and processing.\n\nTopics suggested during the authors' meetings: Discuss that AI is not always solution and talk about when it is actually useful. Discuss that there are many types of microscopy images and each will have their own AI considerations (e.g., imaging modality, 2D vs 3D, static vs time lapse).\n\n## Include section headers as appropriate\n\nUse markdown heading level two for section headers. You can use standard markdown formatting, for example _emphasize the end of this sentence_.\n\nThis is a new paragraph with more text. Your paragraphs can cross reference other items, such as @fig-simple. Use `fig` to reference figures, and `eq` to reference equations, such as @eq-stddev.\n\n###  Sub-subsection headers are also available\n\nTo make your sections cross reference-able throughout the book, include a section reference, as shown in the header for @sec-equation.\n\n## Bibliography and Citations\n\nTo cite a research article, add it to references.bib and then refer to the citation key. For example, @stringer2021 references CellPose and @von_chamier2021 references ZeroCostDL4Mic.\n\n## Code and Equations {#sec-equation}\n\nThis is an example of including a python snippet that generates a figure\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nplt.plot([1,23,2,4])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Simple Plot](1-intro_files/figure-pdf/fig-simple-output-1.pdf){#fig-simple fig-pos='H'}\n:::\n:::\n\n\nIn some cases, you may want to include a code-block that is not executed when the book is compiled. Use the `eval: false` option for this.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nplt.plot([1,23,2,4])\nplt.show()\n```\n:::\n\n\nFigures can also be generated that do not show the code by using the option for `code-fold: true`.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A spiral on a polar axis](1-intro_files/figure-pdf/fig-polar-output-1.pdf){#fig-polar fig-alt='A line plot on a polar axis. The line spirals out from a value of zero to a value of 2.' fig-pos='H'}\n:::\n:::\n\n\nHere is an example equation.\n\n$$\ns = \\sqrt{\\frac{1}{N-1} \\sum_{i=1}^N (x_i - \\overline{x})^2}\n$$ {#eq-stddev}\n\n## Quarto has additional features.\n\nYou can learn more about markdown options and additional Quarto features in the [Quarto documentation](https://quarto.org/docs/authoring/markdown-basics.html).  One example that you might find interesting is the option to include callouts in your text. These callouts can be used to highlight potential pitfalls or provide additional optional exercises that the reader might find helpful. Below are examples of the types of callouts available in Quarto.\n\n::: {.callout-note}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`. They can default to open (like this example) or collapsed (example below).\n:::\n\n::: {.callout-tip collapse=\"true\"}\nThese could be good for extra material or exercises.\n:::\n\n::: {.callout-caution}\nThere are caveats when applying these tools. Expand the code below to learn more.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code code-fold=\"true\"}\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\n```\n:::\n\n\n:::\n\n::: {.callout-warning}\nBe careful to avoid hallucinations.\n:::\n\n::: {.callout-important}\nThis is key information.\n:::\n\n",
    "supporting": [
      "1-intro_files\\figure-pdf"
    ],
    "filters": []
  }
}